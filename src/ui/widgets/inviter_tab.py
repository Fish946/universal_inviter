from PyQt6.QtWidgets import (QWidget, QVBoxLayout, QHBoxLayout, 
                           QPushButton, QLabel, QLineEdit, QTextEdit,
                           QProgressBar, QFileDialog, QMessageBox, QComboBox)
from PyQt6.QtCore import Qt
import qasync
from datetime import datetime

from ui.styles import Styles, Colors
from ui.threads.invite_thread import InviteThread
from utils.file_handler import FileHandler

class InviterTab(QWidget):
    def __init__(self, account_manager, logger, config):
        super().__init__()
        self.account_manager = account_manager
        self.logger = logger
        self.config = config
        self.file_handler = FileHandler(logger)
        self.init_ui()

    def init_ui(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –≤–∫–ª–∞–¥–∫–∏ –∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞"""
        layout = QVBoxLayout(self)

        # –í—ã–±–æ—Ä –∞–∫–∫–∞—É–Ω—Ç–∞
        account_group = QWidget()
        account_layout = QHBoxLayout(account_group)
        
        self.account_combo = QComboBox()
        self.account_combo.setStyleSheet(Styles.INPUT)
        
        account_layout.addWidget(QLabel("–ê–∫–∫–∞—É–Ω—Ç:"))
        account_layout.addWidget(self.account_combo)

        # –í—ã–±–æ—Ä –∫–∞–Ω–∞–ª–∞
        channel_group = QWidget()
        channel_layout = QHBoxLayout(channel_group)
        
        self.channel_input = QLineEdit()
        self.channel_input.setPlaceholderText("Username –∫–∞–Ω–∞–ª–∞ (@channel)")
        self.channel_input.setStyleSheet(Styles.INPUT)
        
        channel_layout.addWidget(QLabel("–ö–∞–Ω–∞–ª:"))
        channel_layout.addWidget(self.channel_input)

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞
        invite_settings_group = QWidget()
        invite_settings_layout = QHBoxLayout(invite_settings_group)
        
        self.invite_count_input = QLineEdit()
        self.invite_count_input.setPlaceholderText("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π (0 - –≤—Å–µ)")
        self.invite_count_input.setStyleSheet(Styles.INPUT)
        
        invite_settings_layout.addWidget(QLabel("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π:"))
        invite_settings_layout.addWidget(self.invite_count_input)

        # –í—ã–±–æ—Ä —Ñ–∞–π–ª–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        file_group = QWidget()
        file_layout = QHBoxLayout(file_group)
        
        self.file_path_label = QLineEdit()
        self.file_path_label.setReadOnly(True)
        self.file_path_label.setStyleSheet(Styles.INPUT)
        
        select_file_btn = QPushButton("–í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª")
        select_file_btn.setStyleSheet(Styles.BUTTON)
        select_file_btn.clicked.connect(self.select_user_file)
        
        file_layout.addWidget(self.file_path_label)
        file_layout.addWidget(select_file_btn)

        # –ü—Ä–æ–≥—Ä–µ—Å—Å
        self.progress_bar = QProgressBar()
        self.progress_bar.setStyleSheet("""
            QProgressBar {
                border: 1px solid #BDBDBD;
                border-radius: 4px;
                text-align: center;
            }
            QProgressBar::chunk {
                background-color: #2196F3;
            }
        """)

        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        control_group = QWidget()
        control_layout = QHBoxLayout(control_group)
        
        self.start_btn = QPushButton("–ù–∞—á–∞—Ç—å")
        self.start_btn.setStyleSheet(Styles.BUTTON)
        self.start_btn.clicked.connect(self.start_inviting)
        
        self.stop_btn = QPushButton("–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å")
        self.stop_btn.setStyleSheet(Styles.BUTTON)
        self.stop_btn.setEnabled(False)
        self.stop_btn.clicked.connect(self.stop_inviting)
        
        control_layout.addWidget(self.start_btn)
        control_layout.addWidget(self.stop_btn)

        # –õ–æ–≥ –æ–ø–µ—Ä–∞—Ü–∏–π
        self.log_view = QTextEdit()
        self.log_view.setReadOnly(True)
        self.log_view.setStyleSheet(Styles.LOG_VIEW)

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ –≤–∫–ª–∞–¥–∫—É
        layout.addWidget(account_group)
        layout.addWidget(channel_group)
        layout.addWidget(invite_settings_group)
        layout.addWidget(file_group)
        layout.addWidget(self.progress_bar)
        layout.addWidget(control_group)
        layout.addWidget(QLabel("–õ–æ–≥ –æ–ø–µ—Ä–∞—Ü–∏–π:"))
        layout.addWidget(self.log_view)

    def select_user_file(self):
        """–í—ã–±–æ—Ä —Ñ–∞–π–ª–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
        file_path, _ = QFileDialog.getOpenFileName(
            self,
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª —Å–æ —Å–ø–∏—Å–∫–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
            "",
            "Text files (*.txt);;CSV files (*.csv);;JSON files (*.json)"
        )

        if file_path:
            self.file_path_label.setText(file_path)
            users = self.file_handler.read_user_list(file_path)
            self.log_message(f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Ñ–∞–π–ª–∞", Colors.INFO)

    @qasync.asyncSlot()
    async def start_inviting(self):
        """–ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç
            current_index = self.account_combo.currentIndex()
            if current_index == -1:
                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–í—ã–±–µ—Ä–∏—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã")
                return

            selected_account = self.account_combo.itemData(current_index)
            if not selected_account:
                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç–∞")
                return
            
            channel = self.channel_input.text().strip()
            file_path = self.file_path_label.text().strip()
            invite_count = self.invite_count_input.text().strip()

            # –í–∞–ª–∏–¥–∞—Ü–∏—è
            if not channel:
                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–£–∫–∞–∂–∏—Ç–µ –∫–∞–Ω–∞–ª")
                return

            if not file_path:
                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª —Å–æ —Å–ø–∏—Å–∫–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
                return

            # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            users = self.file_handler.read_user_list(file_path)
            if not users:
                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç")
                return

            # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ
            if invite_count and invite_count.isdigit():
                count = int(invite_count)
                if count > 0:
                    users = users[:count]

            # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á—É
            task_id = f"invite_{datetime.now().strftime('%Y%m%d_%H%M%S')}"
            self.current_task_id = task_id

            # –û–±–Ω–æ–≤–ª—è–µ–º UI
            self.start_btn.setEnabled(False)
            self.stop_btn.setEnabled(True)
            self.progress_bar.setMaximum(len(users))
            self.progress_bar.setValue(0)

            # –ó–∞–ø—É—Å–∫–∞–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
            self.invite_thread = InviteThread(
                self.account_manager,
                self.logger,
                selected_account,
                channel,
                users,
                task_id
            )
            self.invite_thread.progress_updated.connect(self.update_invite_progress)
            self.invite_thread.finished.connect(self.on_invite_finished)
            self.invite_thread.start()

            self.log_message(f"–ù–∞—á–∞—Ç –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∫–∞–Ω–∞–ª {channel}", Colors.INFO)

        except Exception as e:
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {str(e)}")
            self.reset_invite_ui()

    def stop_inviting(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è"""
        if hasattr(self, 'current_task_id'):
            if hasattr(self, 'invite_thread') and self.invite_thread:
                self.invite_thread.invite_service.stop_inviting(self.current_task_id)
            self.log_message("–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è...", Colors.WARNING)
            self.stop_btn.setEnabled(False)

    def update_invite_progress(self, progress_data):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è"""
        invited = progress_data.get('invited', 0)
        failed = progress_data.get('failed', 0)
        skipped = progress_data.get('skipped', 0)
        total = progress_data.get('total', 0)
        current_user = progress_data.get('current_user', '')

        self.progress_bar.setValue(invited + failed + skipped)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç—á–µ—Ç
        status_text = (
            f"üìä –ü—Ä–æ–≥—Ä–µ—Å—Å: {invited + failed + skipped}/{total}\n"
            f"‚úÖ –£—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–æ: {invited}\n"
            f"‚ùå –û—à–∏–±–æ–∫: {failed}\n"
            f"‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ: {skipped}\n"
        )
        
        if current_user:
            status_text += f"üë§ –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {current_user}"
        
        self.log_message(status_text, Colors.INFO)

    def on_invite_finished(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è"""
        self.reset_invite_ui()
        self.log_message("–ü—Ä–æ—Ü–µ—Å—Å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω", Colors.SUCCESS)

    def reset_invite_ui(self):
        """–°–±—Ä–æ—Å UI –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è"""
        self.start_btn.setEnabled(True)
        self.stop_btn.setEnabled(False)
        self.progress_bar.setValue(0)

    def log_message(self, message: str, color: str):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ª–æ–≥"""
        self.log_view.append(f'<span style="color: {color}">{message}</span>')

    async def update_accounts_combo(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –≤ –∫–æ–º–±–æ–±–æ–∫—Å–µ"""
        try:
            accounts = self.account_manager.db.get_all_accounts()
            self.account_combo.clear()
            
            for account in accounts:
                self.account_combo.addItem(f"{account.phone} (API ID: {account.api_id})", account)
                
        except Exception as e:
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {str(e)}") 